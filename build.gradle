plugins {
	id("com.github.johnrengelman.shadow") version "7.1.2"
	id("io.micronaut.application") version "3.4.1"
	id("gg.jte.gradle") version "2.0.4-SNAPSHOT"
	id("org.ethelred.kv2.java-conventions")
}

version = "0.1"
group = "org.ethelred"

repositories {
	mavenCentral()
	mavenLocal()
}

micronaut {
	runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("org.ethelred.kv2.*")
	}
}

dependencies {
	annotationProcessor("io.micronaut:micronaut-http-validation")
	annotationProcessor("io.micronaut.data:micronaut-data-processor")
	annotationProcessor("io.micronaut.security:micronaut-security-annotations")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-runtime")
	implementation("io.micronaut.data:micronaut-data-jdbc")
	implementation("io.micronaut.liquibase:micronaut-liquibase")
	implementation("io.micronaut.security:micronaut-security")
	implementation("io.micronaut.security:micronaut-security-jwt")
	implementation("io.micronaut.security:micronaut-security-oauth2")
	implementation("io.micronaut.sql:micronaut-jdbc-hikari")
	implementation("io.micronaut.views:micronaut-views-jte")
	implementation("gg.jte:jte:2.0.4-SNAPSHOT")
	implementation("io.micronaut.reactor:micronaut-reactor")
	implementation("io.micronaut.reactor:micronaut-reactor-http-client")
	implementation("javax.annotation:javax.annotation-api")
	runtimeOnly("ch.qos.logback:logback-classic")
	runtimeOnly("mysql:mysql-connector-java")
	runtimeOnly("org.testcontainers:jdbc")
	runtimeOnly("org.testcontainers:mysql")

	testImplementation("org.testcontainers:junit-jupiter")
	testImplementation("org.testcontainers:mysql")
	testImplementation("org.testcontainers:testcontainers")
	implementation("io.micronaut:micronaut-validation")
	implementation 'com.github.ksuid:ksuid:1.1.1'
}


application {
	mainClass.set("org.ethelred.kv2.Application")
}

jte {
	generate()
	generateNativeImageResources = true
	binaryStaticContent = true
}

