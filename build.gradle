plugins {
	id 'java'
	id("com.github.johnrengelman.shadow") version "8.1.0"
	id("io.micronaut.application") version "3.7.9"
	id("org.ethelred.kv2.java-conventions")
	id "co.uzzu.dotenv.gradle" version "2.0.0"
	//	id("com.felipefzdz.gradle.shellcheck") version "1.4.6"
	id 'io.micronaut.test-resources' version '3.7.5'
}

version = "0.1"
group = "org.ethelred"

repositories {
	mavenLocal()
	mavenCentral()
	maven { url = uri("https://teavm.org/maven/repository") } // TODO

}

micronaut {
	//		runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("org.ethelred.kv2.*")
	}
}

dependencies {
	annotationProcessor("io.micronaut:micronaut-http-validation")
	annotationProcessor("io.micronaut.data:micronaut-data-processor")
	annotationProcessor("io.micronaut.security:micronaut-security-annotations")
	annotationProcessor("io.micronaut.openapi:micronaut-openapi")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-runtime")
	implementation("io.micronaut:micronaut-management")
	implementation("io.micronaut.data:micronaut-data-jdbc")
	implementation("io.micronaut.liquibase:micronaut-liquibase")
	implementation("io.micronaut.security:micronaut-security")
	implementation("io.micronaut.security:micronaut-security-jwt")
	implementation("io.micronaut.security:micronaut-security-oauth2")
	implementation("io.micronaut.sql:micronaut-jdbc-hikari")
	implementation("io.micronaut.views:micronaut-views-jte")
	runtimeOnly("gg.jte:jte:2.3.0")
	implementation("io.micronaut.reactor:micronaut-reactor")
	implementation("io.micronaut.reactor:micronaut-reactor-http-client")
	implementation("javax.annotation:javax.annotation-api")
	implementation("io.swagger.core.v3:swagger-annotations")
	runtimeOnly("ch.qos.logback:logback-classic")
	runtimeOnly("mysql:mysql-connector-java")

	testImplementation("org.testcontainers:junit-jupiter")
	testImplementation("org.testcontainers:mysql")
	testImplementation("org.testcontainers:testcontainers")
	implementation("io.micronaut:micronaut-validation")
	implementation 'com.github.ksuid:ksuid:1.1.2'
	implementation("gg.jte:jte-runtime:2.3.3-SNAPSHOT")

	implementation("gg.jte:jte-models:2.3.3-SNAPSHOT")

	implementation(project(":rosterParser"))
	implementation(project(":views"))
	//	implementation(project(":teaClient"))
	def ethelred_cgi_version = "0.5-SNAPSHOT"
	runtimeOnly("org.ethelred.cgi:cgi-micronaut:$ethelred_cgi_version")
	runtimeOnly("org.ethelred.cgi:standalone:$ethelred_cgi_version")
	runtimeOnly('io.micronaut.servlet:micronaut-servlet-core')
}


application {
	mainClass.set("org.ethelred.kv2.Application")
}

tasks.named('run') {
	dependsOn(":teaClient:jar") // TODO turn into file dependency
	//	environment(env.allVariables)
	environment(CGI_SERVER: "standalone")
}

/*
 shellcheck is failing to be loaded in github actions, comment until I look into it
 shellcheck {
 sourceFiles = fileTree(projectDir) {
 include("*.sh")
 }
 }
 check.dependsOn(":shellcheck")
 */
