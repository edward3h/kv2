plugins {
	id 'java'
	id("com.github.johnrengelman.shadow") version "8.1.0"
	id("io.micronaut.application") version "3.7.4"
	id("gg.jte.gradle") version "2.3.0"
	id("org.ethelred.kv2.java-conventions")
	id "co.uzzu.dotenv.gradle" version "2.0.0"
	//	id("com.felipefzdz.gradle.shellcheck") version "1.4.6"
	id 'io.micronaut.test-resources' version '3.7.4'
}

version = "0.1"
group = "org.ethelred"

repositories {
	mavenLocal()
	mavenCentral()
}

micronaut {
	//		runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("org.ethelred.kv2.*")
	}
}

dependencies {
	annotationProcessor("io.micronaut:micronaut-http-validation")
	annotationProcessor("io.micronaut.data:micronaut-data-processor")
	annotationProcessor("io.micronaut.security:micronaut-security-annotations")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-runtime")
	implementation("io.micronaut:micronaut-management")
	implementation("io.micronaut.data:micronaut-data-jdbc")
	implementation("io.micronaut.liquibase:micronaut-liquibase")
	implementation("io.micronaut.security:micronaut-security")
	implementation("io.micronaut.security:micronaut-security-jwt")
	implementation("io.micronaut.security:micronaut-security-oauth2")
	implementation("io.micronaut.sql:micronaut-jdbc-hikari")
	implementation("io.micronaut.views:micronaut-views-jte")
	implementation("gg.jte:jte:2.2.4")
	implementation("io.micronaut.reactor:micronaut-reactor")
	implementation("io.micronaut.reactor:micronaut-reactor-http-client")
	implementation("javax.annotation:javax.annotation-api")
	runtimeOnly("ch.qos.logback:logback-classic")
	runtimeOnly("mysql:mysql-connector-java")

	testImplementation("org.testcontainers:junit-jupiter")
	testImplementation("org.testcontainers:mysql")
	testImplementation("org.testcontainers:testcontainers")
	implementation("io.micronaut:micronaut-validation")
	implementation 'com.github.ksuid:ksuid:1.1.2'

	runtimeOnly('org.ethelred.cgi:cgi-micronaut:0.2')
	runtimeOnly('org.ethelred.cgi:standalone:0.2')

}


application {
	mainClass.set("org.ethelred.kv2.Application")
}

//tasks.named('run') {
//	environment(env.allVariables)
//}

jte {
	generate()
	generateNativeImageResources = true
	binaryStaticContent = true
}

// workaround for https://docs.gradle.org/8.0.1/userguide/validation_problems.html#implicit_dependency
tasks.named('inspectRuntimeClasspath') {
	dependsOn('generateJte')
}

/*
 shellcheck is failing to be loaded in github actions, comment until I look into it
 shellcheck {
 sourceFiles = fileTree(projectDir) {
 include("*.sh")
 }
 }
 check.dependsOn(":shellcheck")
 */
